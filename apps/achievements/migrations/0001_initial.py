# Generated by Django 5.0.1 on 2024-02-09 12:44

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('rank', models.IntegerField(blank=True, null=True, verbose_name='Rank')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Photo')),
                ('rating', models.FloatField(blank=True, null=True, verbose_name='Rating')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Date Created')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('date_release', models.DateTimeField(blank=True, null=True, verbose_name='Date Released')),
                ('date_finished', models.DateTimeField(blank=True, null=True, verbose_name='Date Finished')),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Photo')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='Name')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Photo')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='achievements.game')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('items', models.ManyToManyField(blank=True, null=True, to='achievements.item')),
            ],
        ),
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Photo')),
                ('name', models.CharField(blank=True, max_length=255, null=True, verbose_name='Name')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('date_finished', models.DateTimeField(blank=True, null=True, verbose_name='Date Finished')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='achievements.game')),
                ('solutions', models.ManyToManyField(blank=True, null=True, to='achievements.solution')),
            ],
        ),
        migrations.CreateModel(
            name='UserGameProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('inventory_progress', models.IntegerField(default=0)),
                ('achievements_progress', models.IntegerField(default=0)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='achievements.game')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('games', models.ManyToManyField(through='achievements.UserGameProfile', to='achievements.game')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='achievements.inventory')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='achievements.userprofile')),
            ],
        ),
        migrations.AddField(
            model_name='usergameprofile',
            name='user_profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='achievements.userprofile'),
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_unlocked', models.BooleanField(default=False)),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='achievements.achievement')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='achievements.userprofile')),
            ],
        ),
        migrations.AddIndex(
            model_name='achievement',
            index=models.Index(fields=['game'], name='achievement_game_id_daa9e5_idx'),
        ),
        migrations.AddIndex(
            model_name='userinventory',
            index=models.Index(fields=['user_profile', 'inventory'], name='achievement_user_pr_43ec59_idx'),
        ),
        migrations.AddIndex(
            model_name='usergameprofile',
            index=models.Index(fields=['user_profile', 'game'], name='achievement_user_pr_13edb0_idx'),
        ),
        migrations.AddIndex(
            model_name='userachievement',
            index=models.Index(fields=['user_profile', 'achievement'], name='achievement_user_pr_5a8035_idx'),
        ),
    ]
